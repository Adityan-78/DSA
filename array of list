#include <stdio.h>

#define MAX_SIZE 25

int list[MAX_SIZE];  // Array to store the list elements
int index = -1;   

void create(){
 int n,i;
printf("Enter the number of elements to be added in the list: ");
scanf("%d",&n);

if (n<=MAX_SIZE){
    for (i=0;i<n;i++){
        scanf("%d", &list[i]);
        index++;
    }
}
else
{
printf("\nThe size is limited you cannot add data in to the list");
}
}
// Index to keep track of the last element

void insert(int data, int pos) {
    // Shift elements to make space for the new data
    for (int i = index; i >= pos - 1; i--) {
        list[i + 1] = list[i];
    }
    
    list[pos - 1] = data;  // Insert the new data
    index++;               // Increment the index
}

void delete(int pos) {
    printf("Deleted data: %d\n", list[pos - 1]);
    
    // Shift elements to remove the deleted data
    for (int i = pos; i <= index; i++) {
        list[i - 1] = list[i];
    }
    
    index--;  // Decrement the index
}

void display() {
    for (int i = 0; i <= index; i++) {
        printf("%d ", list[i]);
    }
    printf("\n");
}

int main() {
    int choice, data, pos;

    while (1) {
        printf("Menu:\n");
        printf("1. Create\n");
        printf("2. Insert\n");
        printf("3. Delete\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
            create();
            break;
            case 2:
                if (index < MAX_SIZE - 1) {
                    printf("Enter data to insert: ");
                    scanf("%d", &data);
                    printf("Enter position to insert: ");
                    scanf("%d", &pos);

                    if (pos >= 1 && pos <= index + 2) {
                        insert(data, pos);
                    } else {
                        printf("Invalid position\n");
                    }
                } else {
                    printf("List is full\n");
                }
                break;
            case 3:
                if (index >= 0) {
                    printf("Enter position to delete: ");
                    scanf("%d", &pos);

                    if (pos >= 1 && pos <= index + 1) {
                        delete(pos);
                    } else {
                        printf("Invalid position\n");
                    }
                } else {
                    printf("List is empty\n");
                }
                break;
            case 4:
                if (index >= 0) {
                    printf("List elements: ");
                    display();
                } else {
                    printf("List is empty\n");
                }
                break;
            case 5:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
